{"version":3,"file":"Button.Split.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Split.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { css, classNamesFunction } from 'office-ui-fabric-react/lib/Utilities';\nimport { getStyles, IButtonBasicExampleStyleProps, IButtonBasicExampleStyles } from './Button.Basic.Example.styles';\nimport { DefaultButton, IconButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { getCustomSplitButtonStyles } from './Button.Split.Example.styles';\n\nconst alertClicked = (): void => {\n  alert('Clicked');\n};\n\nconst getClassNames = classNamesFunction<IButtonBasicExampleStyleProps, IButtonBasicExampleStyles>();\n\nexport class ButtonSplitExample extends React.Component<IButtonProps> {\n  public render(): JSX.Element {\n    const { disabled, checked } = this.props;\n    const classNames = getClassNames(getStyles, {});\n\n    return (\n      <div className={css(classNames.twoup)}>\n        <div>\n          <Label>Standard</Label>\n          <DefaultButton\n            data-automation-id=\"test\"\n            disabled={disabled}\n            checked={checked}\n            text=\"Create account\"\n            onClick={alertClicked}\n            split={true}\n            splitButtonAriaLabel={'See 2 sample options'}\n            aria-roledescription={'split button'}\n            style={{ height: '35px' }}\n            menuProps={{\n              items: [\n                {\n                  key: 'emailMessage',\n                  text: 'Email message',\n                  iconProps: { iconName: 'Mail' }\n                },\n                {\n                  key: 'calendarEvent',\n                  text: 'Calendar event',\n                  iconProps: { iconName: 'Calendar' }\n                }\n              ]\n            }}\n          />\n        </div>\n        <div>\n          <Label>Primary</Label>\n          <DefaultButton\n            primary\n            data-automation-id=\"test\"\n            disabled={disabled}\n            checked={checked}\n            text=\"Create account\"\n            onClick={alertClicked}\n            split={true}\n            aria-roledescription={'split button'}\n            style={{ height: '35px' }}\n            menuProps={{\n              items: [\n                {\n                  key: 'emailMessage',\n                  text: 'Email message',\n                  iconProps: { iconName: 'Mail' }\n                },\n                {\n                  key: 'calendarEvent',\n                  text: 'Calendar event',\n                  iconProps: { iconName: 'Calendar' }\n                }\n              ]\n            }}\n          />\n        </div>\n        <div>\n          <Label>Primary Action Disabled</Label>\n          <DefaultButton\n            primary\n            data-automation-id=\"test\"\n            disabled={disabled}\n            primaryDisabled={true}\n            checked={checked}\n            text=\"Create account\"\n            onClick={alertClicked}\n            split={true}\n            aria-roledescription={'split button'}\n            style={{ height: '35px' }}\n            menuProps={{\n              items: [\n                {\n                  key: 'emailMessage',\n                  text: 'Email message',\n                  iconProps: { iconName: 'Mail' }\n                },\n                {\n                  key: 'calendarEvent',\n                  text: 'Calendar event',\n                  iconProps: { iconName: 'Calendar' }\n                }\n              ]\n            }}\n          />\n        </div>\n        <div>\n          <Label>Button Disabled</Label>\n          <DefaultButton\n            primary\n            data-automation-id=\"test\"\n            disabled={true}\n            allowDisabledFocus={true}\n            checked={checked}\n            text=\"Create account\"\n            onClick={alertClicked}\n            onKeyPress={alertClicked}\n            onKeyDown={alertClicked}\n            onKeyUp={alertClicked}\n            onMouseDown={alertClicked}\n            onMouseUp={alertClicked}\n            split={true}\n            aria-roledescription={'split button'}\n            style={{ height: '35px' }}\n            menuProps={{\n              items: [\n                {\n                  key: 'emailMessage',\n                  text: 'Email message',\n                  iconProps: { iconName: 'Mail' }\n                },\n                {\n                  key: 'calendarEvent',\n                  text: 'Calendar event',\n                  iconProps: { iconName: 'Calendar' }\n                }\n              ]\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport class ButtonSplitCustomExample extends React.Component<IButtonProps> {\n  public render(): JSX.Element {\n    const { disabled, checked } = this.props;\n    const customSplitButtonStyles = getCustomSplitButtonStyles();\n\n    return (\n      <div>\n        <Label>Split button with icon and custom styles</Label>\n        <IconButton\n          data-automation-id=\"test\"\n          disabled={disabled}\n          checked={checked}\n          iconProps={{ iconName: 'Upload' }}\n          text=\"Create account\"\n          onClick={alertClicked}\n          split={true}\n          aria-roledescription={'split button'}\n          styles={customSplitButtonStyles}\n          menuProps={{\n            items: [\n              {\n                key: 'emailMessage',\n                text: 'Email message',\n                iconProps: { iconName: 'Mail' }\n              },\n              {\n                key: 'calendarEvent',\n                text: 'Calendar event',\n                iconProps: { iconName: 'Calendar' }\n              }\n            ]\n          }}\n        />\n      </div>\n    );\n  }\n}\n"]}