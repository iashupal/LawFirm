{"version":3,"file":"Button.Command.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.Command.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAgB,MAAM,mCAAmC,CAAC;AAChF,OAAO,EAAE,KAAK,EAAE,MAAM,kCAAkC,CAAC;AACzD,OAAO,EAAE,GAAG,EAAE,kBAAkB,EAAE,MAAM,sCAAsC,CAAC;AAC/E,OAAO,EAAE,SAAS,EAA4D,MAAM,+BAA+B,CAAC;AAEpH,IAAM,aAAa,GAAG,kBAAkB,EAA4D,CAAC;AAErG;IAA0C,gDAAiC;IAA3E;;IA2DA,CAAC;IA1DQ,qCAAM,GAAb;QACQ,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAO,CAAgB;QACzC,IAAM,UAAU,GAAG,aAAa,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAEhD,OAAO,CACL,6BAAK,SAAS,EAAE,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC;YACnC;gBACE,oBAAC,KAAK,6CAA2C;gBACjD,oBAAC,aAAa,0BACO,MAAM,EACzB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAC9B,IAAI,EAAC,gBAAgB,EACrB,SAAS,EAAE;wBACT,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,cAAc;gCACnB,IAAI,EAAE,eAAe;gCACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;6BAChC;4BACD;gCACE,GAAG,EAAE,eAAe;gCACpB,IAAI,EAAE,gBAAgB;gCACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;6BACpC;yBACF;qBACF,GACD,CACE;YACN;gBACE,oBAAC,KAAK,mDAAiD;gBACvD,oBAAC,aAAa,0BACO,MAAM,EACzB,QAAQ,EAAE,QAAQ,EAClB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAC9B,IAAI,EAAC,gBAAgB,EACrB,SAAS,EAAE;wBACT,kBAAkB,EAAE,KAAK;wBACzB,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,cAAc;gCACnB,IAAI,EAAE,eAAe;gCACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;6BAChC;4BACD;gCACE,GAAG,EAAE,eAAe;gCACpB,IAAI,EAAE,gBAAgB;gCACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;6BACpC;yBACF;qBACF,GACD,CACE,CACF,CACP,CAAC;IACJ,CAAC;IACH,2BAAC;AAAD,CAAC,AA3DD,CAA0C,KAAK,CAAC,SAAS,GA2DxD","sourcesContent":["import * as React from 'react';\nimport { CommandButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { css, classNamesFunction } from 'office-ui-fabric-react/lib/Utilities';\nimport { getStyles, IButtonBasicExampleStyleProps, IButtonBasicExampleStyles } from './Button.Basic.Example.styles';\n\nconst getClassNames = classNamesFunction<IButtonBasicExampleStyleProps, IButtonBasicExampleStyles>();\n\nexport class ButtonCommandExample extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { disabled, checked } = this.props;\n    const classNames = getClassNames(getStyles, {});\n\n    return (\n      <div className={css(classNames.twoup)}>\n        <div>\n          <Label>CommandButton that focuses on menu</Label>\n          <CommandButton\n            data-automation-id=\"test\"\n            disabled={disabled}\n            checked={checked}\n            iconProps={{ iconName: 'Add' }}\n            text=\"Create account\"\n            menuProps={{\n              items: [\n                {\n                  key: 'emailMessage',\n                  text: 'Email message',\n                  iconProps: { iconName: 'Mail' }\n                },\n                {\n                  key: 'calendarEvent',\n                  text: 'Calendar event',\n                  iconProps: { iconName: 'Calendar' }\n                }\n              ]\n            }}\n          />\n        </div>\n        <div>\n          <Label>CommandButton that doesn't focus on menu</Label>\n          <CommandButton\n            data-automation-id=\"test\"\n            disabled={disabled}\n            checked={checked}\n            iconProps={{ iconName: 'Add' }}\n            text=\"Create account\"\n            menuProps={{\n              shouldFocusOnMount: false,\n              items: [\n                {\n                  key: 'emailMessage',\n                  text: 'Email message',\n                  iconProps: { iconName: 'Mail' }\n                },\n                {\n                  key: 'calendarEvent',\n                  text: 'Calendar event',\n                  iconProps: { iconName: 'Calendar' }\n                }\n              ]\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]}