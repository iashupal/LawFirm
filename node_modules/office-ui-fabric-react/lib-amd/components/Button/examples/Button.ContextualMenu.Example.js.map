{"version":3,"file":"Button.ContextualMenu.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.ContextualMenu.Example.tsx"],"names":[],"mappings":";;;IAOA,IAAM,aAAa,GAAG,8BAAkB,EAA4D,CAAC;IAErG;QAAiD,uDAAiC;QAAlF;YAAA,qEA8EC;YAJS,cAAQ,GAAG,UAAC,SAA+B;gBACjD,wCAAwC;gBACxC,OAAO,oBAAC,+BAAc,uBAAK,SAAS,EAAI,CAAC;YAC3C,CAAC,CAAC;;QACJ,CAAC;QA7EQ,4CAAM,GAAb;YACQ,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAO,CAAgB;YACzC,IAAM,UAAU,GAAG,aAAa,CAAC,uCAAS,EAAE,EAAE,CAAC,CAAC;YAEhD,OAAO,CACL,6BAAK,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,KAAK,CAAC;gBACnC;oBACE,oBAAC,aAAK,6BAA2B;oBACjC,oBAAC,sBAAa,0BACO,MAAM,EACzB,QAAQ,EAAE,QAAQ,EAClB,kBAAkB,EAAE,IAAI,EACxB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAC9B,MAAM,EAAE,IAAI,CAAC,QAAQ,EACrB,IAAI,EAAC,KAAK;wBACV,yCAAyC;wBACzC,WAAW,EAAE,UAAA,EAAE;4BACb,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;wBAClB,CAAC,EACD,SAAS,EAAE;4BACT,KAAK,EAAE;gCACL;oCACE,GAAG,EAAE,cAAc;oCACnB,IAAI,EAAE,eAAe;oCACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;iCAChC;gCACD;oCACE,GAAG,EAAE,eAAe;oCACpB,IAAI,EAAE,gBAAgB;oCACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;iCACpC;6BACF;4BACD,oBAAoB,EAAE,IAAI;yBAC3B,GACD,CACE;gBACN;oBACE,oBAAC,aAAK,yBAAuB;oBAC7B,oBAAC,sBAAa,0BACO,MAAM,EACzB,QAAQ,EAAE,QAAQ,EAClB,kBAAkB,EAAE,IAAI,EACxB,OAAO,EAAE,OAAO,EAChB,WAAW,EAAE,IAAI,EACjB,SAAS,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAC9B,MAAM,EAAE,IAAI,CAAC,QAAQ,EACrB,IAAI,EAAC,KAAK;wBACV,yCAAyC;wBACzC,WAAW,EAAE,UAAA,EAAE;4BACb,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;wBAClB,CAAC,EACD,SAAS,EAAE;4BACT,KAAK,EAAE;gCACL;oCACE,GAAG,EAAE,cAAc;oCACnB,IAAI,EAAE,eAAe;oCACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;iCAChC;gCACD;oCACE,GAAG,EAAE,eAAe;oCACpB,IAAI,EAAE,gBAAgB;oCACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;iCACpC;6BACF;4BACD,oBAAoB,EAAE,IAAI;yBAC3B,GACD,CACE,CACF,CACP,CAAC;QACJ,CAAC;QAMH,kCAAC;IAAD,CAAC,AA9ED,CAAiD,KAAK,CAAC,SAAS,GA8E/D;IA9EY,kEAA2B","sourcesContent":["import * as React from 'react';\nimport { DefaultButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\nimport { IContextualMenuProps, ContextualMenu } from 'office-ui-fabric-react/lib/ContextualMenu';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport { css, classNamesFunction } from 'office-ui-fabric-react/lib/Utilities';\nimport { getStyles, IButtonBasicExampleStyleProps, IButtonBasicExampleStyles } from './Button.Basic.Example.styles';\n\nconst getClassNames = classNamesFunction<IButtonBasicExampleStyleProps, IButtonBasicExampleStyles>();\n\nexport class ButtonContextualMenuExample extends React.Component<IButtonProps, {}> {\n  public render(): JSX.Element {\n    const { disabled, checked } = this.props;\n    const classNames = getClassNames(getStyles, {});\n\n    return (\n      <div className={css(classNames.twoup)}>\n        <div>\n          <Label>Non persisted menu</Label>\n          <DefaultButton\n            data-automation-id=\"test\"\n            disabled={disabled}\n            allowDisabledFocus={true}\n            checked={checked}\n            iconProps={{ iconName: 'Add' }}\n            menuAs={this._getMenu}\n            text=\"New\"\n            // tslint:disable-next-line:jsx-no-lambda\n            onMenuClick={ev => {\n              console.log(ev);\n            }}\n            menuProps={{\n              items: [\n                {\n                  key: 'emailMessage',\n                  text: 'Email message',\n                  iconProps: { iconName: 'Mail' }\n                },\n                {\n                  key: 'calendarEvent',\n                  text: 'Calendar event',\n                  iconProps: { iconName: 'Calendar' }\n                }\n              ],\n              directionalHintFixed: true\n            }}\n          />\n        </div>\n        <div>\n          <Label>Persisted menu</Label>\n          <DefaultButton\n            data-automation-id=\"test\"\n            disabled={disabled}\n            allowDisabledFocus={true}\n            checked={checked}\n            persistMenu={true}\n            iconProps={{ iconName: 'Add' }}\n            menuAs={this._getMenu}\n            text=\"New\"\n            // tslint:disable-next-line:jsx-no-lambda\n            onMenuClick={ev => {\n              console.log(ev);\n            }}\n            menuProps={{\n              items: [\n                {\n                  key: 'emailMessage',\n                  text: 'Email message',\n                  iconProps: { iconName: 'Mail' }\n                },\n                {\n                  key: 'calendarEvent',\n                  text: 'Calendar event',\n                  iconProps: { iconName: 'Calendar' }\n                }\n              ],\n              directionalHintFixed: true\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  private _getMenu = (menuProps: IContextualMenuProps): JSX.Element => {\n    // Customize contextual menu with menuAs\n    return <ContextualMenu {...menuProps} />;\n  };\n}\n"]}